# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

    config.vm.box = "ubuntu/focal64"
    config.vm.box_check_update = false
  
    config.vm.network "private_network", ip: "192.168.33.11"
  
    config.vm.synced_folder "./shared", "/vagrant_data"
    
    config.vm.hostname = "k8s-labs"
  
    config.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
    end
  
    config.vm.provision "shell", inline: <<-SHELL
      apt-get update -y
      update-alternatives --list python
      update-alternatives --install /usr/bin/python python /usr/bin/python3 1
      python --version
      apt-get --no-install-recommends install -y python3-pip python3-setuptools
      update-alternatives --list pip
      update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1

      # Install Docker: https://docs.docker.com/engine/install/ubuntu/
      apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      apt-key fingerprint 0EBFCD88
      add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      apt-get update -y
      apt-get install -y docker-ce docker-ce-cli containerd.io

      # Install Minikube
      curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
      install minikube-linux-amd64 /usr/local/bin/minikube

      # Install Docker-compose
      pip install setuptools docker-compose

      # Install kubectl
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      # Install Helm
      curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      chmod 700 get_helm.sh
      ./get_helm.sh

      # Allow vagrant user to execute Docker command without sudo
      addgroup -a vagrant docker
    SHELL
  end
  